#!/usr/bin/expect -f
# Apply corrected Caddyfile without port conflicts

set timeout 60
set host "192.168.234.2"
set password "lacis12345@"

puts "=== Applying Fixed Caddyfile ==="

spawn ssh lacissystem@$host
expect {
    "password:" {
        send "$password\r"
        expect "$ "
        
        puts "\n=== Stop current Python proxy to free port 80 ==="
        send "sudo pkill -f 'lpg-proxy.py'\r"
        expect {
            "password:" {
                send "$password\r"
                expect "$ "
            }
            "$ " {
                puts "\n=== Process stopped ==="
            }
        }
        
        puts "\n=== Create new Caddyfile with correct ports ==="
        send "sudo tee /etc/caddy/Caddyfile << 'EOF'\r"
        expect "> "
        
        send "# Caddyfile for LacisProxyGateway - Port Fixed\r"
        expect "> "
        send "# Version: 3.0.2\r"
        expect "> "
        send "# Updated: 2025-08-03 - Resolved port conflicts\r"
        expect "> "
        send "\r"
        expect "> "
        send "# Global settings\r"
        expect "> "
        send "{\r"
        expect "> "
        send "    admin localhost:2019\r"
        expect "> "
        send "    log {\r"
        expect "> "
        send "        output file /var/log/lpg/caddy.log\r"
        expect "> "
        send "        format json\r"
        expect "> "
        send "        level INFO\r"
        expect "> "
        send "    }\r"
        expect "> "
        send "}\r"
        expect "> "
        send "\r"
        expect "> "
        send "# HTTP to HTTPS redirect\r"
        expect "> "
        send ":80 {\r"
        expect "> "
        send "    redir https://{host}{uri} permanent\r"
        expect "> "
        send "}\r"
        expect "> "
        send "\r"
        expect "> "
        send "# Main HTTPS domain\r"
        expect "> "
        send "https://akb001yebraxfqsm9y.dyndns-web.com {\r"
        expect "> "
        send "    \r"
        expect "> "
        send "    handle / {\r"
        expect "> "
        send "        respond \"Welcome to LacisStack - LacisProxyGateway is operational\" 200\r"
        expect "> "
        send "    }\r"
        expect "> "
        send "    \r"
        expect "> "
        send "    # LacisDrawBoards - using current HTTP server on 8080\r"
        expect "> "
        send "    handle /lacisstack/boards* {\r"
        expect "> "
        send "        uri strip_prefix /lacisstack/boards\r"
        expect "> "
        send "        reverse_proxy localhost:8080 {\r"
        expect "> "
        send "            header_up Host {host}\r"
        expect "> "
        send "            header_up X-Real-IP {remote_host}\r"
        expect "> "
        send "            header_up X-Forwarded-For {remote_host}\r"
        expect "> "
        send "            header_up X-Forwarded-Proto {scheme}\r"
        expect "> "
        send "        }\r"
        expect "> "
        send "    }\r"
        expect "> "
        send "    \r"
        expect "> "
        send "    log {\r"
        expect "> "
        send "        output file /var/log/lpg/access.log\r"
        expect "> "
        send "        format json\r"
        expect "> "
        send "    }\r"
        expect "> "
        send "}\r"
        expect "> "
        send "\r"
        expect "> "
        send "# Admin UI - using different port to avoid conflict\r"
        expect "> "
        send ":8444 {\r"
        expect "> "
        send "    reverse_proxy localhost:8443\r"
        expect "> "
        send "    \r"
        expect "> "
        send "    log {\r"
        expect "> "
        send "        output file /var/log/lpg/admin-access.log\r"
        expect "> "
        send "        format json\r"
        expect "> "
        send "    }\r"
        expect "> "
        send "}\r"
        expect "> "
        send "EOF\r"
        expect "$ "
        
        puts "\n=== Check Caddyfile syntax ==="
        send "sudo caddy validate --config /etc/caddy/Caddyfile\r"
        expect {
            "password:" {
                send "$password\r"
                expect "$ "
            }
            "$ " {
                puts "\n=== Syntax validation done ==="
            }
        }
        
        puts "\n=== Try to start Caddy service ==="
        send "sudo systemctl start caddy\r"
        expect {
            "password:" {
                send "$password\r"
                expect "$ "
            }
            "$ " {
                puts "\n=== Start command executed ==="
            }
        }
        
        puts "\n=== Check Caddy service status ==="
        send "systemctl status caddy --no-pager\r"
        expect "$ "
        
        puts "\n=== Check port usage ==="
        send "ss -tlnp | grep -E ':(80|443|8444)'\r"
        expect "$ "
        
        send "exit\r"
        expect eof
    }
    timeout {
        puts "\nConnection timeout"
        exit 1
    }
}