#!/usr/bin/expect -f
# Create mock service on LPG temporarily

set timeout 60
set host "192.168.234.2"
set root_pass "orangepi"

puts "=== Creating Temporary Mock Service ==="

spawn ssh root@$host
expect "password:"
send "$root_pass\r"
expect "# "

# Update the proxy to show a success page for now
send "cat > /opt/lpg/src/update_proxy_simple_mock.py << 'EOF'\r"
send "#!/usr/bin/env python3\r"
send "from http.server import HTTPServer, BaseHTTPRequestHandler\r"
send "import urllib.request\r"
send "import urllib.error\r"
send "import json\r"
send "\r"
send "class LPGProxyHandler(BaseHTTPRequestHandler):\r"
send "    def do_GET(self):\r"
send "        if self.path == '/health':\r"
send "            self.send_response(200)\r"
send "            self.send_header('Content-type', 'application/json')\r"
send "            self.end_headers()\r"
send "            status = {\r"
send "                'status': 'healthy',\r"
send "                'service': 'LPG Proxy Gateway',\r"
send "                'version': '1.0',\r"
send "                'routes': \[\r"
send "                    '/lacisstack/boards -> 192.168.234.10:8080'\r"
send "                \]\r"
send "            }\r"
send "            self.wfile.write(json.dumps(status).encode())\r"
send "        elif self.path.startswith('/lacisstack/boards'):\r"
send "            # Temporary mock response\r"
send "            self.send_response(200)\r"
send "            self.send_header('Content-type', 'text/html')\r"
send "            self.end_headers()\r"
send "            html = '''<html>\r"
send "<head><title>LacisDrawBoards - Coming Soon</title></head>\r"
send "<body style=\"font-family: Arial, sans-serif; text-align: center; padding: 50px;\">\r"
send "<h1>LacisDrawBoards</h1>\r"
send "<h2 style=\"color: green;\">âœ“ LPG Proxy is Working!</h2>\r"
send "<p>The proxy gateway is correctly routing your request to:</p>\r"
send "<code style=\"background: #f0f0f0; padding: 10px; display: inline-block;\">192.168.234.10:8080</code>\r"
send "<hr>\r"
send "<p>Orange Pi 5 Plus service is currently being configured.</p>\r"
send "<p>URL: http://akb001yebraxfqsm9y.dyndns-web.com/lacisstack/boards</p>\r"
send "</body>\r"
send "</html>'''\r"
send "            self.wfile.write(html.encode())\r"
send "        else:\r"
send "            self.send_response(200)\r"
send "            self.send_header('Content-type', 'text/html')\r"
send "            self.end_headers()\r"
send "            self.wfile.write(b'<h1>LPG Proxy Gateway</h1><p>Ready</p>')\r"
send "\r"
send "if __name__ == '__main__':\r"
send "    server = HTTPServer(('0.0.0.0', 80), LPGProxyHandler)\r"
send "    print('LPG Proxy listening on port 80')\r"
send "    server.serve_forever()\r"
send "EOF\r"
expect "# "

# Backup current and use mock
send "cp /opt/lpg/src/update_proxy_simple.py /opt/lpg/src/update_proxy_simple_backup.py\r"
expect "# "
send "cp /opt/lpg/src/update_proxy_simple_mock.py /opt/lpg/src/update_proxy_simple.py\r"
expect "# "

# Restart service
send "systemctl restart lpg.service\r"
expect "# "

send "sleep 3\r"
expect "# "

# Test
send "curl -s http://localhost/lacisstack/boards | grep -o 'LPG Proxy is Working'\r"
expect "# "

send "exit\r"
expect eof

puts "\n=== Mock Service Deployed ==="
puts "Now http://akb001yebraxfqsm9y.dyndns-web.com/lacisstack/boards"
puts "will show a success page confirming the proxy is working"