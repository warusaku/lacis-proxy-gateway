version: '3.8'

services:
  # Caddy リバースプロキシ
  caddy:
    image: caddy:2.8-alpine
    container_name: lpg-caddy
    ports:
      - "80:80"
      - "443:443"
      - "2019:2019"  # Admin API
    volumes:
      - ./config/caddy/Caddyfile:/etc/caddy/Caddyfile
      - caddy_data:/data
      - caddy_config:/config
    environment:
      - CADDY_ADMIN=0.0.0.0:2019
    networks:
      - lpg-network
    restart: unless-stopped

  # LPG API サーバー（開発用）
  api:
    build:
      context: .
      dockerfile: Dockerfile.dev
      target: development
    container_name: lpg-api
    ports:
      - "8443:8443"
      - "21:21"        # FTP
      - "30000-30100:30000-30100"  # FTP Passive mode
    volumes:
      - ./src/api:/app
      - ./config:/etc/lpg
      - ./certs:/app/certs
      - api_logs:/var/log/lpg
      - ftp_data:/var/ftp/lpg
    environment:
      - ENVIRONMENT=development
      - PORT=8443
      - CONFIG_PATH=/etc/lpg/config.json
      - TLS_CERT_FILE=/app/certs/localhost.crt
      - TLS_KEY_FILE=/app/certs/localhost.key
      - JWT_SECRET=${JWT_SECRET:-$(openssl rand -base64 32)}
      - JWT_EXPIRES_IN=24h
      - CADDY_ADMIN_API=http://caddy:2019
      - LOG_ENDPOINT=
      - LOG_LEVEL=debug
    depends_on:
      - caddy
    networks:
      - lpg-network
    command: air
    restart: unless-stopped

  # フロントエンド開発サーバー（Vite）
  web:
    build:
      context: .
      dockerfile: Dockerfile.dev
      target: web-dev
    container_name: lpg-web
    ports:
      - "5173:5173"
    volumes:
      - ./src/web:/app
      - ./node_modules:/app/node_modules
    environment:
      - VITE_API_URL=https://localhost:8443/api/v1
    networks:
      - lpg-network
    command: npm run dev -- --host
    restart: unless-stopped

  # Telegraf メトリクス収集（オプション）
  # telegraf:
  #   image: telegraf:1.31-alpine
  #   container_name: lpg-telegraf
  #   volumes:
  #     - ./config/telegraf/telegraf.conf:/etc/telegraf/telegraf.conf
  #     - api_logs:/var/log/lpg:ro
  #   environment:
  #     - LOG_ENDPOINT=${LOG_ENDPOINT}
  #   networks:
  #     - lpg-network
  #   restart: unless-stopped

  # 開発用データベース（必要に応じて）
  # postgres:
  #   image: postgres:15-alpine
  #   container_name: lpg-postgres
  #   environment:
  #     - POSTGRES_DB=lpg
  #     - POSTGRES_USER=lpg
  #     - POSTGRES_PASSWORD=lpg_dev_password
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #   networks:
  #     - lpg-network
  #   restart: unless-stopped

volumes:
  caddy_data:
    driver: local
  caddy_config:
    driver: local
  api_logs:
    driver: local
  postgres_data:
    driver: local
  ftp_data:
    driver: local

networks:
  lpg-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/24

# 開発環境の設定
# 1. HTTPSローカル証明書の生成:
#    cd certs && mkcert localhost 127.0.0.1 ::1
#
# 2. 起動:
#    docker-compose up -d
#
# 3. ログ確認:
#    docker-compose logs -f api
#
# 4. 再起動:
#    docker-compose restart api
#
# 5. 完全クリーンアップ:
#    docker-compose down -v 