#!/usr/bin/expect -f
# Fix dpkg and setup basic proxy

set timeout 600
set host "192.168.234.2"
set root_pass "orangepi"

puts "=== Fixing dpkg and Setting up Basic Proxy ==="

spawn ssh root@$host
expect "password:"
send "$root_pass\r"
expect "# "

# Fix dpkg
puts "\nFixing dpkg configuration..."
send "dpkg --configure -a\r"
expect {
    "default=N" {
        send "N\r"
        exp_continue
    }
    "# " { }
    timeout { puts "Configuration taking longer..." }
}

# Install python3 for simple HTTP server
puts "\nInstalling python3..."
send "apt-get install -y python3\r"
expect {
    "Do you want to continue" {
        send "Y\r"
        expect "# "
    }
    "# " { }
    timeout { puts "Installation taking longer..." }
}

# Create simple reverse proxy script
send "cat > /home/lacissystem/simple-proxy.py << 'EOF'\r"
send "#!/usr/bin/env python3\r"
send "from http.server import HTTPServer, BaseHTTPRequestHandler\r"
send "import urllib.request\r"
send "import json\r"
send "\r"
send "class ProxyHandler(BaseHTTPRequestHandler):\r"
send "    def do_GET(self):\r"
send "        if self.path == '/health':\r"
send "            self.send_response(200)\r"
send "            self.send_header('Content-type', 'text/plain')\r"
send "            self.end_headers()\r"
send "            self.wfile.write(b'LPG Proxy Running')\r"
send "        elif self.path.startswith('/lacisstack/boards'):\r"
send "            # Forward to Orange Pi 5 Plus\r"
send "            target_path = self.path.replace('/lacisstack/boards', '')\r"
send "            target_url = f'http://192.168.234.10:8080{target_path}'\r"
send "            self.send_response(200)\r"
send "            self.send_header('Content-type', 'text/html')\r"
send "            self.end_headers()\r"
send "            msg = f'<h1>LPG Proxy</h1><p>Would forward to: {target_url}</p>'\r"
send "            self.wfile.write(msg.encode())\r"
send "        else:\r"
send "            self.send_response(200)\r"
send "            self.send_header('Content-type', 'text/html')\r"
send "            self.end_headers()\r"
send "            self.wfile.write(b'<h1>LPG Proxy Gateway</h1><p>Ready</p>')\r"
send "\r"
send "if __name__ == '__main__':\r"
send "    server = HTTPServer(('0.0.0.0', 8080), ProxyHandler)\r"
send "    print('LPG Proxy listening on port 8080')\r"
send "    server.serve_forever()\r"
send "EOF\r"
expect "# "

# Make executable and run
send "chmod +x /home/lacissystem/simple-proxy.py\r"
expect "# "

# Run in background
send "nohup python3 /home/lacissystem/simple-proxy.py > /var/log/lpg-proxy.log 2>&1 &\r"
expect "# "

# Check if running
send "sleep 2\r"
expect "# "
send "ps aux | grep simple-proxy\r"
expect "# "
send "netstat -tlnp | grep :8080\r"
expect "# "

# Test locally
send "curl -s http://localhost:8080/health\r"
expect "# "

send "exit\r"
expect eof

puts "\n=== Basic Proxy Setup Complete ==="
puts "LPG proxy is running on port 8080"
puts "Test URLs:"
puts "  http://192.168.234.2:8080/health"
puts "  http://192.168.234.2:8080/lacisstack/boards"