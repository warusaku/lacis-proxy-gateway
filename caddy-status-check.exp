#!/usr/bin/expect -f
# Check Caddy status and start service without sudo issues

set timeout 60
set host "192.168.234.2"
set password "lacis12345@"

puts "=== Caddy Service Status Check ==="

spawn ssh lacissystem@$host
expect {
    "password:" {
        send "$password\r"
        expect "$ "
        
        puts "\n=== Check current running processes ==="
        send "ps aux | grep caddy | grep -v grep\r"
        expect "$ "
        
        puts "\n=== Check port 80 and 443 usage (user mode) ==="
        send "ss -tlnp | grep -E ':(80|443)'\r"
        expect "$ "
        
        puts "\n=== Check systemd caddy service status ==="
        send "systemctl status caddy --no-pager\r"
        expect "$ "
        
        puts "\n=== Try to start caddy service ==="
        send "sudo systemctl start caddy\r"
        expect {
            "password:" {
                send "$password\r"
                expect "$ "
                puts "\n=== Check if caddy started ==="
                send "systemctl status caddy --no-pager\r"
                expect "$ "
            }
            "$ " {
                puts "\n=== No password needed or already started ==="
            }
        }
        
        puts "\n=== Enable caddy service ==="
        send "sudo systemctl enable caddy\r"
        expect {
            "password:" {
                send "$password\r"
                expect "$ "
            }
            "$ " {
                puts "\n=== No password needed ==="
            }
        }
        
        puts "\n=== Final status check ==="
        send "systemctl status caddy --no-pager\r"
        expect "$ "
        
        puts "\n=== Check if ports are now listening ==="
        send "ss -tlnp | grep -E ':(80|443)'\r"
        expect "$ "
        
        send "exit\r"
        expect eof
    }
    timeout {
        puts "\nConnection timeout"
        exit 1
    }
}